version: '3.4'

services:
  seq:
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5340:80"

  sql-data:
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "5433:1433"
    volumes:
      - sql-data:/var/opt/mssql

  redis-data:
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      
  rabbitmq:
    ports:
      - "15672:15672"
      - "5672:5672"

  envoy-proxy:
    environment:
      - ENVOY_UID=0
    ports:
      - "8080:80"
      - "8443:443"
      - "8001:8001"
    volumes: 
      - ./Proto/proto.pb:/etc/envoy
      - ./ApiGateways/Envoy/envoy.yaml:/etc/envoy
      - ./ApiGateways/Envoy/ssl:/etc/envoy/tls

  file-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ORCHESTRATOR_TYPE=${ORCHESTRATOR_TYPE}
      - PATH_BASE=/file-api
      - GRPC_PORT=81
      - PORT=80
      - OrderingUrl=http://ordering-service
      - ConnectionStrings__IntegrationEventConnStr=redis-data
      - ConnectionStrings__MappingSvcConnStr=Data Source=host.docker.internal;Initial Catalog=RPA-misc;User ID=sa;Password=p@ssw0rd;
      - EventBusConnection=rabbitmq
      - SourceFolder=/media/filesrc
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - UseLoadTest=${USE_LOADTEST:-False}
    volumes: 
      - /c/Users/hafiz.roslan.HARTALEGA/Documents/RPA/Projects/HartaRPA/tests:/media/filesrc
    ports:
      - "5111:80"
      - "9101:81"

  ordering-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ORCHESTRATOR_TYPE=${ORCHESTRATOR_TYPE}
      - PATH_BASE=/ordering-api
      - GRPC_PORT=81
      - PORT=80
      - ConnectionString=Server=sqldata;Database=ORDERING_DB;User Id=sa;Password=Pass@word;
      - EventBusConnection=rabbitmq
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5112:80"
      - "9102:81"      

  webstatus:
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ORCHESTRATOR_TYPE=${ORCHESTRATOR_TYPE}
      - HealthChecksUI__HealthChecks__0__Name=File HTTP Check
      - HealthChecksUI__HealthChecks__0__Uri=http://file-service/hc
      - HealthChecksUI__HealthChecks__1__Name=Ordering HTTP Check
      - HealthChecksUI__HealthChecks__1__Uri=http://ordering-service/hc
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
    ports: 
      - "5100:80"

volumes:
  sql-data:
    external: false
  redis-data:
    external: false