{{- $fullName := include "envoy-proxy.fullname" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "envoy-proxy.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "envoy-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "envoy-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.hostAlias }}
      hostAliases:
      - ip: {{ .ip }}
        hostnames:
          - {{ .hostname }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "envoy-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml" ]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.service.sslPort }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.service.adminPort }}
              protocol: TCP
          env:
            - name: ENVOY_UID
              value: "0"
          {{- with .Values.probes.liveness  }}
          livenessProbe:
            httpGet: 
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
          {{- end }}
          {{- with .Values.probes.readiness  }}
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ .Values.assets.config }}
      volumes:
        - name: config
          configMap:
            name: {{ $fullName }}-config
            items:
            - key: envoy.yaml
              path: envoy.yaml
            - key: proto.pb
              path: proto.pb
            - key: cert.pem
              path: tls/cert.pem
            - key: key.pem
              path: tls/key.pem
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
